<?php

/**
 * @file guardian_news.module
 *
 * Implements an AngularJS-driven block.
 */

/**
 * Implements hook_block_info().
 */
function guardian_news_block_info() {
  $blocks['guardian_latest_block'] = array(
    'info' => t('Latest articles from guardian'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function guardian_news_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'guardian_latest_block':
      $path = drupal_get_path('module', 'guardian_news');
      drupal_add_js(array('guardian_latest_news' => array('url' => 'http://content.guardianapis.com/search')), 'setting');
      drupal_add_js(array('guardian_latest_news' => array('apiKey' => 'hfqncwz9hxwstua2f8qszjj8')), 'setting');
      drupal_add_js(array('guardian_latest_news' => array('pageSize' => 3)), 'setting');
      drupal_add_js(array('guardian_latest_news' => array('orderBy' => 'newest')), 'setting');

      $block['subject'] = t('Articles from guardian');
      $block['content'] = array(
        '#theme' => 'guardian_latest_news',
        '#attached' => array(
          'js' => array(
            'https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.min.js',
            $path . '/guardian_latest_news.js',
          ),
        ),
      );
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function guardian_news_theme() {
  return array(
    'guardian_latest_news' => array(
      'template' => 'guardian_news',
      'variables' => array(),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function guardian_news_menu() {
  $items['admin/structure/guardian_news'] = array(
    'title' => 'The Guardian news',
    'type' => MENU_NORMAL_ITEM,
    'description' => 'Admin page for module guardian_news.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_guardian_news_admin_form'),
    'access arguments' => array('administer content'),
  );

  return $items;
}

/**
 * Admin page for module.
 */
function _guardian_news_admin_form($form, &$form_state) {

  $values = _guardian_news_admin_load_options();

  // Title.
  $form['title'] = array(
    '#type' => 'markup',
    '#markup' => '<p>Settings for the Guardian news block.</p>',
  );

  // Nunmer of posts.
  $form['post_number'] = array(
    '#type' => 'select',
    '#title' => t('Number of articles:'),
    '#description' => t('Allows you to select the (maximum) number of articles that will be displayed in the block.'),
    '#options' => array(
      1 => '1',
      2 => '2',
      3 => '3',
      4 => '4',
      5 => '5',
      6 => '6',
      7 => '7',
      8 => '8',
      9 => '9',
      10 => '10',
    ),
    '#default_value' => $values['post_number'],
  );

  // Sections.
  $sections = guardianapi_get_sections_all();
  foreach ($sections as $key => $section) {
    $sections[$section['id']] = $section['webTitle'];
    unset($sections[$key]);
  }
  ksort($sections);
  $form['sections'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Sections:'),
    '#description' => t('Allows you to select the thematic section to be displayed.'),
    '#options' => $sections,
    '#default_value' => $values['sections'],
  );

  // Search.
  $form['search'] = array(
    '#type' => 'textfield',
    '#title' => t('Search filter:'),
    '#description' => t('Allows you to filter the results by a custom text input.'),
    '#default_value' => $values['search'],
  );

  // Sorting.
  $form['sorting'] = array(
    '#type' => 'select',
    '#title' => t('Order by:'),
    '#description' => t('Allows you to select the order in which the articles will be displayed.'),
    '#options' => array(
      'default' => 'Default',
      'newest' => 'Newest',
      'oldest' => 'Oldest',
      'relevance' => 'Relevance',
    ),
    '#default_value' => $values['sorting'],
  );

  // Submit button.
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Save changes'),
  );

  // Add submit function.
  $form['#submit'] = '_guardian_news_admin_form_submit';

  return $form;
}

/**
 * Admin page submit function.
 */
function _guardian_news_admin_form_submit($form, &$form_state) {

  $values = $form_state['values'];

  variable_set('guardian_options_num', $values['post_number']);

  variable_set('guardian_options_sections', implode(',', $values['sections']));

  variable_set('guardian_options_search', $values['search']);

  variable_set('guardian_options_sorting', $values['sorting']);

}

/**
 * Load options.
 */
function _guardian_news_admin_load_options() {

  $values = array();

  $values['post_number'] = variable_get('guardian_options_num', 3);

  $values['sections'] = explode(',', variable_get('guardian_options_sections', ''));

  $values['search'] = variable_get('guardian_options_search', '');

  $values['sorting'] = variable_get('guardian_options_sorting', 'default');

  return $values;
}

/**
 * Returns all the article sections.
 */
function guardianapi_get_sections_all() {
  $sections = guardianapi_query('sections');
  if (!empty($sections)) {
    return $sections;
  }

  return FALSE;
}

/**
 * Function that performs a query in Guardian's API.
 */
function guardianapi_query($apicom, $api_key = 'test', $options = array()) {
  // Check for valid command.
  if (!in_array($apicom, array('search', 'tags', 'sections'))) {
    return FALSE;
  }

  // Process options.
  $options['api-key'] = $api_key;
  foreach ($options as $key => &$option) {
    $option = sprintf('%s=%s', $key, $option);
  }

  // Build URL and fetch.
  $url = sprintf('http://content.guardianapis.com/%s?%s', $apicom, implode('&', $options));
  $response_json = file_get_contents($url);

  if ($response_json) {
    $response = json_decode($response_json, TRUE);
    if (!empty($response['response']['results'])) {
      return $response['response']['results'];
    }
  }

  return FALSE;
}