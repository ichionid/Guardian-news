<?php

/**
 * @file guardian_news.module
 *
 * Implements a block with articles from The Guardian's API.
 */

/**
 * Implements hook_block_info().
 */
function guardian_news_block_info() {
  $blocks['guardian_block'] = array(
    'info' => t('Latest articles from The Guardian'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function guardian_news_block_view($delta = '') {

  $block = array();
  switch ($delta) {
    case 'guardian_block':
      $block['subject'] = t('Articles from The Guardian');

      if (variable_get('guardian_options_angular', 0) == 0) {

        $articles = _guardian_news_get_articles();

        $articles = _guardian_news_preprocess_block_vars($articles);

        $variables = array(
          'articles' => $articles,
        );
        $block['content'] = theme('guardian_news', $variables);
      }
      else {
        $options = _guardian_news_admin_load_options();
        drupal_add_js(array('guardian_latest_news' => array('url' => 'http://content.guardianapis.com/search')), 'setting');
        drupal_add_js(array('guardian_latest_news' => array('apiKey' => $options['api_key'])), 'setting');
        drupal_add_js(array('guardian_latest_news' => array('pageSize' => $options['post_number'])), 'setting');
        drupal_add_js(array('guardian_latest_news' => array('orderBy' => $options['sorting'])), 'setting');
        foreach ($options['sections'] as $key => $section) {
          if (empty($section)) {
            unset($options['sections'][$key]);
          }
        }
        if (!empty($options['sections'])) {
          drupal_add_js(array('guardian_latest_news' => array('sections' => implode('|', $options['sections']))), 'setting');
        }
        if (!empty($options['search'])) {
          drupal_add_js(array('guardian_latest_news' => array('q' => $options['search'])), 'setting');
        }
        if (!empty($options['more'])) {
          drupal_add_js(array('guardian_latest_news' => array('more' => $options['more'])), 'setting');
          drupal_add_js(array('guardian_latest_news' => array('moreText' => t('More'))), 'setting');
        }

        $block['content'] = array(
          '#theme' => 'guardian_news_angular',
          '#attached' => array(
            'js' => array(
              'https://ajax.googleapis.com/ajax/libs/angularjs/1.3.10/angular.min.js',
              drupal_get_path('module', 'guardian_news') . '/js/guardian_news.js',
            ),
          ),
        );
      }
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function guardian_news_theme() {
  return array(
    'guardian_news' => array(
      'template' => 'templates/guardian_news',
      'variables' => array(),
    ),
    'guardian_news_angular' => array(
      'template' => 'templates/guardian_news_angular',
      'variables' => array(),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function guardian_news_menu() {
  $items['admin/config/content/guardian_news'] = array(
    'title' => 'The Guardian news',
    'type' => MENU_NORMAL_ITEM,
    'description' => 'Admin page for module guardian_news.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_guardian_news_admin_form'),
    'access arguments' => array('administer content'),
  );

  return $items;
}

/**
 * Admin page for module.
 */
function _guardian_news_admin_form($form, &$form_state) {

  $values = _guardian_news_admin_load_options();

  // Title.
  $form['title'] = array(
    '#type' => 'markup',
    '#markup' => '<p>Settings for The Guardian news block.</p>',
  );

  // API key.
  $form['api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('API key:'),
    '#description' => t('API key to The Guardian API.'),
    '#default_value' => $values['api_key'],
  );

  // Number of posts.
  $form['post_number'] = array(
    '#type' => 'select',
    '#title' => t('Number of articles:'),
    '#description' => t('Allows you to select the (maximum) number of articles that will be displayed in the block.'),
    '#options' => array(
      1 => '1',
      2 => '2',
      3 => '3',
      4 => '4',
      5 => '5',
      6 => '6',
      7 => '7',
      8 => '8',
      9 => '9',
      10 => '10',
    ),
    '#default_value' => $values['post_number'],
  );

  // Sections.
  $sections = guardianapi_get_sections_all();
  foreach ($sections as $key => $section) {
    $sections[$section['id']] = $section['webTitle'];
    unset($sections[$key]);
  }
  ksort($sections);
  $form['sections'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Sections:'),
    '#description' => t('Allows you to select the thematic section to be displayed.'),
    '#options' => $sections,
    '#default_value' => $values['sections'],
  );

  // Search.
  $form['search'] = array(
    '#type' => 'textfield',
    '#title' => t('Search filter:'),
    '#description' => t('Allows you to filter the results by a custom text input.'),
    '#default_value' => $values['search'],
  );

  // Sorting.
  $form['sorting'] = array(
    '#type' => 'select',
    '#title' => t('Order by') . ':',
    '#description' => t('Allows you to select the order in which the articles will be displayed.'),
    '#options' => array(
      'default' => 'Default',
      'newest' => 'Newest',
      'oldest' => 'Oldest',
      'relevance' => 'Relevance',
    ),
    '#default_value' => $values['sorting'],
  );

  // Angular.
  $form['angular'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable AngularJS:'),
    '#description' => t('Allows you to use the module with AngularJS.'),
    '#default_value' => $values['angular'],
  );

    // Angular.
  $form['more'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show more') . ':',
    '#description' => t('Allows visitor to view more articles.'),
    '#default_value' => $values['more'],
  );

  // Submit button.
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Save changes'),
  );

  // Add submit function.
  $form['#submit'][] = '_guardian_news_admin_form_submit';

  return $form;
}

/**
 * Admin page submit function.
 */
function _guardian_news_admin_form_submit($form, &$form_state) {

  $values = $form_state['values'];

  variable_set('guardian_options_api_key', $values['api_key']);

  variable_set('guardian_options_post_number', $values['post_number']);

  variable_set('guardian_options_sections', implode(',', $values['sections']));

  variable_set('guardian_options_search', $values['search']);

  variable_set('guardian_options_sorting', $values['sorting']);

  variable_set('guardian_options_angular', $values['angular']);

  variable_set('guardian_options_more', $values['more']);

}

/**
 * Load options.
 */
function _guardian_news_admin_load_options() {

  $values = array();

  $values['api_key'] = variable_get('guardian_options_api_key', 'test');

  $values['post_number'] = variable_get('guardian_options_post_number', 3);

  $values['sections'] = explode(',', variable_get('guardian_options_sections', ''));

  $values['search'] = variable_get('guardian_options_search', '');

  $values['sorting'] = variable_get('guardian_options_sorting', 'default');

  $values['angular'] = variable_get('guardian_options_angular', 0);

  $values['more'] = variable_get('guardian_options_more', 0);

  return $values;
}

/**
 * Preprocess function for article list.
 */
function _guardian_news_preprocess_block_vars($articles) {
  foreach ($articles as &$article) {
    $article['webPublicationDate'] = format_date(strtotime($article['webPublicationDate']), 'custom', 'D, d/m/Y - H:i');
  }

  return $articles;
}

/**
 * Get API key.
 */
function _guardian_news_admin_get_api_key() {
  return variable_get('guardian_options_api_key', 'test');
}

/**
 * Fetch articles according to settings for the non-Angular implementation.
 */
function _guardian_news_get_articles() {
  $options = _guardian_news_admin_load_options();

  foreach ($options['sections'] as $key => $section) {
    if (empty($section)) {
      unset($options['sections'][$key]);
    }
  }

  $query_options = array(
    'page-size' => $options['post_number'],
    'order-by' => $options['sorting'],
  );

  if (!empty($options['sections'])) {
    $query_options['section'] = implode('|', $options['sections']);
  }

  if (!empty($options['search'])) {
    $query_options['q'] = $options['search'];
  }

  $results = guardianapi_query('search', $query_options);

  return $results;
}

/**
 * Returns all the article sections.
 */
function guardianapi_get_sections_all() {
  $sections = guardianapi_query('sections');
  if (!empty($sections)) {
    return $sections;
  }

  return FALSE;
}

/**
 * Function that performs a query in Guardian's API.
 */
function guardianapi_query($apicom, &$options = array()) {
  // Check for valid command.
  if (!in_array($apicom, array('search', 'tags', 'sections'))) {
    return FALSE;
  }

  // Process options.
  $options['api-key'] = _guardian_news_admin_get_api_key();
  foreach ($options as $key => &$option) {
    $option = sprintf('%s=%s', $key, $option);
  }

  // Build URL and fetch.
  $url = sprintf('http://content.guardianapis.com/%s?%s', $apicom, implode('&', $options));
  $response_json = file_get_contents($url);

  if ($response_json) {
    $response = json_decode($response_json, TRUE);
    return $response['response']['results'];
  }

  return FALSE;
}
